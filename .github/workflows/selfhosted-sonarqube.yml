name: Self-Hosted Code Analysis

on:
  push:
    branches: [main]
  pull_request:

jobs:
  security:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:9.9-community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
          SONARQUBE_JDBC_USERNAME: "admin"
          SONARQUBE_JDBC_PASSWORD: "admin"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit
        run: |
          bandit -r src/ -f json -o bandit.json

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to be healthy..."
          until curl -s http://localhost:9000/api/system/health | grep -q '"status":"GREEN"'; do
            sleep 5
          done

      - name: Download and configure SonarQube Scanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-*.zip
          export PATH="$PWD/sonar-scanner-*/bin:$PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Run SonarQube Scan
        env:
          SONAR_HOST_URL: "http://localhost:9000"
          SONAR_TOKEN: "admin"
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-python-project \
            -Dsonar.sources=src \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.python.version=3.12 \
            -Dsonar.qualitygate.wait=true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate Sonar Scan Report
        env:
          SONAR_TOKEN: "admin"
        run: |
          SONAR_API="http://localhost:9000/api"
          PROJECT_KEY="my-python-project"

          curl -s -u "${SONAR_TOKEN}:" \
              "${SONAR_API}/issues/search?componentKeys=${PROJECT_KEY}&ps=500" \
              -o "issues.json"

          curl -s -u "${SONAR_TOKEN}:" \
              "${SONAR_API}/qualitygates/project_status?projectKey=${PROJECT_KEY}" \
              -o "quality_gate.json"

          curl -s -u "${SONAR_TOKEN}:" \
              "${SONAR_API}/measures/component?component=${PROJECT_KEY}&metricKeys=coverage,line_coverage,duplicated_lines_density,ncloc,complexity" \
              -o "measures.json"

          jq -s '{
            timestamp: now,
            issues: .[0].issues,
            quality_gate: .[1].projectStatus,
            metrics: .[2].component.measures
          }' issues.json quality_gate.json measures.json > sonar.json

      - name: Upload Sonar Report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-json-report
          path: sonar.json

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json
